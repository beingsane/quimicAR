
plugins {
    id "com.moowork.node" version "1.3.1"
}


repositories {
    mavenCentral()
}

apply plugin: 'java'
//apply plugin: 'jetty'
apply plugin: 'application'

mainClassName = 'hello.MainServer'
applicationName = 'app'

defaultTasks = ['clean', 'jar']

jar {
    manifest {
        attributes 'Main-Class': 'hello.MainServer'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        // remove all signature files
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}
dependencies {
	compile 'com.sparkjava:spark-core:2.3'
	compile 'com.google.code.gson:gson:1.7.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'com.sparkjava', name: 'spark-template-velocity', version:'2.3'
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["install"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'src/main/webapp/build'
    into 'build/resources/main/public/.'
}

task stage(dependsOn: ['clean', 'installApp'])

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

node {
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")
}